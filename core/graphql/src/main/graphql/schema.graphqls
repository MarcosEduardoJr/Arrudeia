type UserGraph {
    uuid: String
    name: String
    email: String
    phone: String
    idDocument: String
    birthDate: String
    profileImage: String
    zipCode: String
    street: String
    number: Int
    district: String
    city: String
    state: String
    country: String
}

type ArrudeiaPlace {
    available: [ArrudeiaAvailablePlaceGraph]
    description: String
    categoryName: String
    image: String
    latitude: Float
    longitude: Float
    name: String
    phone: String
    priceLevel: Int
    rating: Float
    socialNetwork: String
    subCategoryName: String
    uuid: String
}

type CheckList{
    checklist: [CheckListGraph]
}

type CheckListGraph{
    name: String
}

type ArrudeiaAvailablePlaceGraph {
    id: ID
    name: String
    placeId: String
}

type Query {
    _entities(representations: [_Any!]!): [_Entity]!

    _service: _Service!

    user(uuid: String!): UserGraph

    arrudeiaPlaces: [ArrudeiaPlace]
    arrudeiaPlace(uuid: String!): ArrudeiaPlace
    arrudeiaAvailablePlace(placeId: String!): ArrudeiaAvailablePlaceGraph

    checklist: [CheckListGraph]
}

type Mutation {
    updateUser(
        uuid: String,
        name: String,
        email: String,
        phone: String,
        idDocument: String,
        birthDate: String,
        profileImage: String,
        zipCode: String,
        street: String,
        number: Int,
        district: String,
        city: String,
        state: String,
        country: String
    ) : String

    updateUserAddress(
        uuid: String,
        zipCode: String
        street: String
        number: Int
        district: String
        city: String
        state: String
        country: String
    ) : String

    createArrudeiaPlace(
        categoryName: String,
        description: String,
        image: String,
        latitude: Float,
        longitude: Float,
        name: String,
        phone: String,
        priceLevel: Int,
        rating: Float,
        socialNetwork: String,
        subCategoryName: String,
        uuid: String
    ) : String

    createArrudeiaAvailablePlace(
        name: String,
        placeId: String
    ) : String

}



union _Entity = UserGraph

scalar _Any

type _Service {
    """
    The sdl representing the federated service capabilities. Includes federation directives, removes federation types, and includes rest of full schema after schema directives have been applied
    """
    sdl: String
}

schema {
    query: Query
    mutation: Mutation
}
